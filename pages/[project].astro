---
import { getCollection } from 'astro:content'
import Layout from '/layouts/Layout.astro'
import { type ProjectEntry } from '/schemas/work'
import Button from '../components/Button.vue'
import Back from '/components/icons/Back.vue'
import ProjectHero from '/components/ProjectHero.astro'
import { getEntry } from 'astro:content'
import Image from '/components/Image.astro'
import { Image as AstroImage } from 'astro:assets'

export async function getStaticPaths() {
  const projects = await getCollection('works', ({ data }) => data.type === 'project')
  return projects.map(entry => ({
    params: { project: entry.slug },
    props: { entry: entry as ProjectEntry }
  }))
}

const { entry } = Astro.props
const { data } = entry
const company = data.for && await getEntry(data.for)
const { Content } = await entry.render()
---

<Layout bodyClass="container" title={`${data.title}, by Maxwell Barvian`}>
    <header class="max-xl:max-w-prose max-xl:mx-auto max-xl:pt-10vh xl:fixed xl:top-10vh max-xl:mb-8">
      <nav>
        <a href="/" onclick="return sessionStorage.getItem('from') === '/' ? (history.back(), false) : undefined" class="flex items-start gap-2 group outline-none w-fit">
          <div class="w-fit opacity-45 duration-150 group-focus-visible:outline transition-opacity group-hover:opacity-85" style="view-transition-name: back"><Back class="h-6" /></div>
          <div class="relative">
            <span style="view-transition-name: name" class="opacity-45 duration-150 transition-opacity group-hover:opacity-85">Maxwell Barvian</span>
            <span aria-hidden="true" class="invisible top-full left-0 absolute whitespace-nowrap" style="view-transition-name: title">Front-end Developer</span>
          </div>
        </a>
      </nav>
    </header>
    <main>
      <article class="pb-12vh xl:pt-10vh max-w-prose mx-auto">
        <header class="mb-10" style="view-transition-name: project-header;">
          <div class="flex items-center">
            <div class="flex-1">
              <h1 class="text-2xl font-medium">{data.title}</h1>
              <div class="flex items-center gap-2 text-sm mt-0.5"> 
                {company && <>
                  <span>
                    <span class="opacity-70">For</span>
                    <a class="font-medium underline" href={company.data.url}>
                      {company.data.logo && (
                        <Image class="h-3.5 inline-block align-middle relative -top-[0.0625rem] mr-1" alt={`${company.data.name} logo`} src={company.data.logo} />
                      )}{company.data.name}
                      </a>
                  </span>
                  <span class="opacity-70">·</span>
                </>}
                {data.date && (
                  <time pubdate datetime={data.date.toISOString()} class="opacity-70">
                    {
                      data.date.toLocaleDateString('en-us', {
                        year: 'numeric',
                        month: 'long'
                      })
                    }
                  </time>
                )}
              </div>
            </div>
            <div class="flex gap-6">
              {data.repo && (
                <Button client:load secondary icon="github" href={data.repo}>
                </Button>
              )}
              {data.url && (
                <Button icon="external" href={data.url}>
                  View live
                </Button>
              )}
            </div>
          </div>
          {data.video && (
            <div class="relative mt-10 group/hero">
              <ProjectHero {entry} />
            </div>
          )}
        </header>
        <div class="prose prose-lg dark:prose-invert" style="view-transition-name: project-content">
          <Content />
        </div>
      </article>
    </main>
</Layout>