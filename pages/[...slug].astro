---
import { getCollection } from 'astro:content'
import Layout from '/layouts/Layout.astro'
import Video from '/components/Video.vue'
import Button from '/components/Button.astro'
import PauseButton from '/components/PauseButton.vue'
import Back from '/components/icons/Back.vue'

export async function getStaticPaths() {
  const works = await getCollection('works', ({ data }) => data.type === 'project')
  return works.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }))
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout bodyClass="container" title={`${entry.data.title}, by Maxwell Barvian`}>
    <header class="max-md:pt-10 md:max-xl:pt-28 max-xl:max-w-prose max-xl:mx-auto xl:fixed xl:top-28 max-xl:mb-8">
      <nav>
        <a href="/" class="flex items-start gap-2 *:opacity-45 *:duration-150 *:transition-opacity *:hover:opacity-85"><Back class="h-6" /><span transition:name="name">Maxwell Barvian</span></a>
      </nav>
    </header>
    <main>
      <article class="pb-16 md:pb-28 xl:pt-28 max-w-prose mx-auto">
        <header class="mb-12">
          <div class="flex items-center">
            <div class="flex-1">
              <h1 class="text-2xl font-medium">{entry.data.title}</h1>
              <div class="flex items-center text-sm mt-0.5"> 
                {('for' in entry.data) && <>
                  <span>
                    <span class="opacity-70">For</span>
                    <a href=""></a>
                  </span>
                  <span class="opacity-70">·</span>
                </>}
                {('date' in entry.data) && (
                  <time pubdate datetime={entry.data.date.toISOString()} class="opacity-70">
                    {
                      entry.data.date.toLocaleDateString('en-us', {
                        year: 'numeric',
                        month: 'long'
                      })
                    }
                  </time>
                )}
              </div>
            </div>
            <div class="flex gap-6">
              {('repo' in entry.data) && (
                <Button secondary icon="github" href={entry.data.repo}>
                </Button>
              )}
              {('url' in entry.data) && (
                <Button icon="external" href={entry.data.url}>
                  View live
                </Button>
              )}
            </div>
          </div>
          {('video' in entry.data) && (
            <div class="relative aspect-golden overflow-hidden rounded-2xl mt-10">
              <Video class="size-full object-cover" client:load transition:persist={entry.slug} style={{ viewTransitionName: entry.slug }}  src={entry.data.video} muted playsinline loop autoplay poster={entry.data.poster} />
              <div class="absolute bottom-5 right-5">
                <PauseButton client:only="vue" />
              </div>
            </div>
          )}
        </header>
        <div class="prose prose-lg dark:prose-invert">
          <Content />
        </div>
      </article>
    </main>
</Layout>