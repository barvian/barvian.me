---
import Codrops from './Work/Codrops.astro'
import GitHub from './Work/GitHub.astro'
import Project from './Work/Project.astro'
import Smashing from './Work/Smashing.astro'
import { getEntry, type CollectionEntry } from 'astro:content'
import { isProjectEntry, isCodropsEntry, isGitHubEntry, isSmashingEntry } from '@/schemas/work'

type Props = Pick<CollectionEntry<'works'>, 'slug'>

const { slug } = Astro.props

const entry = await getEntry('works', slug)
if (!entry) throw new Error(`Could not find work with slug: ${slug}`)
---

{/* There were too many issues with using a dynamic tag */}
{
	isCodropsEntry(entry) ? (
		<Codrops entry={entry} />
	) : isGitHubEntry(entry) ? (
		<GitHub {entry} />
	) : isProjectEntry(entry) ? (
		<Project {entry} />
	) : isSmashingEntry(entry) ? (
		<Smashing {entry} />
	) : null
}
