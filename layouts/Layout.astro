---
import '/assets/main.css'
import { ViewTransitions } from 'astro:transitions'

type Props = {
	title?: string
	bodyClass?: string
}

const {
	title = "Maxwell Barvian, Front-end Developer",
	bodyClass
} = Astro.props
---

<!doctype html>
<html lang="en" class="bg-white text-black dark:bg-black dark:text-white antialiased">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions fallback="none" />
	</head>
	<body class:list={[bodyClass, 'min-h-[100svh]']}>	
		<slot />
	</body>
</html>

<script>
  // Handle home -> project page transition
  import { isTransitionBeforePreparationEvent } from "astro:transitions/client"

  // Fallback for unsupported browsers
  // @ts-expect-error experimental prop
  if (!document.startViewTransition)
    addEventListener('beforeunload', () => sessionStorage.setItem('from', location.pathname))
  
  function markActiveProject(doc: Document, slug: string) {
    const project = doc.querySelector<HTMLAnchorElement>(`a[data-project][href="${slug}"]`)
    if (!project) return
    
    project.dataset.project = 'active'
    document.addEventListener('astro:page-load', () => {
        project.dataset.project = ''
    }, { once: true })
  }

  document.addEventListener('astro:before-preparation', (event) => {
    if (!isTransitionBeforePreparationEvent(event)) return
    sessionStorage.setItem('from', event.from.pathname)

    // If we're going to a project page, immediately mark the active project...
    if (event.from.pathname === '/') markActiveProject(document, event.to.pathname)
    document.addEventListener('astro:after-preparation', () => {
      // ...otherwise, if we're going home we have to wait for the homepage document to load
      if (event.to.pathname === '/') markActiveProject(event.newDocument, event.from.pathname)
      
      event.newDocument.documentElement.dataset.transitionFrom = event.from.pathname
      event.newDocument.documentElement.dataset.transitionTo = event.to.pathname
    }, { once: true });
  })
</script>
