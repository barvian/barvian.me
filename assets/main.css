@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    @font-face {
        font-family: "Favorit";
        src: url("/assets/ABCFavoritVariable-Trial.woff2") format("woff2-variations");
    }
    
    ::view-transition-group(*) {
        animation-duration: theme('transitionDuration.450'); /* verbose, but I like haing to use theme values */
        animation-timing-function: theme('transitionTimingFunction.DEFAULT');
    }

    ::view-transition-old(root),
    ::view-transition-new(root) {
        transform-origin: top center;
    }
    
    /* Exit animations */
    [data-astro-transition=forward]::view-transition-old(root),
    [data-astro-transition=forward]::view-transition-old(title) {
        animation-duration: theme('transitionDuration.350');
    }

    [data-astro-transition=forward]::view-transition-old(root) {
        animation-name: push;
    }

    /* Entrance animations */
    [data-astro-transition=back]::view-transition-new(root),
    [data-astro-transition=back]::view-transition-new(title) {
        animation-timing-function: theme('transitionTimingFunction.out');
        animation-duration: theme('transitionDuration.350');
        animation-delay: calc(theme('transitionDuration.450') - theme('transitionDuration.350'))
    }

    [data-astro-transition=back]::view-transition-new(root) {
        animation-name: pop;
    }

    ::view-transition-new(project-hero) {
        animation-name: hero;
    }

    ::view-transition-old(project-hero) {
        /*
            This is a persistent element, so let the new always show on top
            See https://developer.chrome.com/docs/web-platform/view-transitions#making_the_most_of_content_you_already_have
        */
        display: none;
    }

    @keyframes hero {
        to {
            box-shadow: none;
        }
    }

    @keyframes push {
        to {
            transform: scale(0.9);
            opacity: 0;
        }
    }

    @keyframes pop {
        from {
            transform: scale(0.9);
            opacity: 0;
        }
    }

    *, *::before, *::after {
        min-width: 0;
        min-height: 0;
    }
}

@layer components {
    .container {
        @apply xl:px-8
    }
}